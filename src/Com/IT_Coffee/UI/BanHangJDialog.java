/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Com.IT_Coffee.UI;

import Com.IT_Coffee.DAO.BHChiTietHDDAO;
import Com.IT_Coffee.DAO.HoaDonDAO;
import Com.IT_Coffee.DAO.LoaiSPDAO;
import Com.IT_Coffee.DAO.SanPhamDAO;
import Com.IT_Coffee.Entity.BHChiTietHD;
import Com.IT_Coffee.Entity.BanHang;
import Com.IT_Coffee.Entity.HoaDon;
import Com.IT_Coffee.Entity.LoaiSP;
import Com.IT_Coffee.utils.Auth;
import Com.IT_Coffee.utils.MsgBox;
import Com.IT_Coffee.utils.XDate;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedWriter;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTable;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HMD
 */
public class BanHangJDialog extends javax.swing.JDialog {

    /**
     * Creates new form BanHangJDialog
     */
    public BanHangJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblMaNV = new javax.swing.JLabel();
        lblTenNV = new javax.swing.JLabel();
        lblDongHo = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblLoiChao = new javax.swing.JLabel();
        lblDATE = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        cboLoaiSP = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        cboTenSP = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        cboSize = new javax.swing.JComboBox();
        btnCheck = new javax.swing.JButton();
        lblCheck = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblDonGia = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        spnSoLuong = new javax.swing.JSpinner();
        btnGioHang = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        lblMaSP = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtKH = new javax.swing.JTextField();
        panlThanhVIen = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        lblTenTV = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        lblLoaiThe = new javax.swing.JLabel();
        btlTimKiemTV = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        lblGiam = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBanHang = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtTongCong = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtThanhTien = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtTienKhachDua = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtTienTra = new javax.swing.JTextField();
        lblthongtin = new javax.swing.JLabel();
        btnXuatHoaDon = new javax.swing.JButton();
        btnTinh = new javax.swing.JButton();
        txtMDH = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel23 = new javax.swing.JLabel();
        lblKhuyenMai = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Mã NV:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Tên NV:");

        lblMaNV.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblMaNV.setForeground(new java.awt.Color(51, 0, 102));
        lblMaNV.setText("manv");

        lblTenNV.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTenNV.setForeground(new java.awt.Color(51, 0, 102));
        lblTenNV.setText("tennv");

        lblDongHo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDongHo.setForeground(new java.awt.Color(153, 0, 51));
        lblDongHo.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblDongHo.setText("00:00:00 AM");
        lblDongHo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Com/icon/dongho32.png"))); // NOI18N
        jLabel5.setText(" ");

        lblLoiChao.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblLoiChao.setForeground(new java.awt.Color(51, 0, 153));
        lblLoiChao.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLoiChao.setText("jLabel14");

        lblDATE.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblDATE.setForeground(new java.awt.Color(153, 0, 51));
        lblDATE.setText("jLabel3");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 51));
        jLabel3.setText("Ngày:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMaNV)
                    .addComponent(lblTenNV))
                .addGap(247, 247, 247)
                .addComponent(lblLoiChao, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(lblDATE)
                .addGap(18, 18, 18)
                .addComponent(lblDongHo)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMaNV, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblTenNV))
                .addGap(18, 18, 18))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDongHo)
                    .addComponent(jLabel5)
                    .addComponent(lblLoiChao)
                    .addComponent(lblDATE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Loại SP:");

        cboLoaiSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cboLoaiSP.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboLoaiSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboLoaiSPActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Tên SP:");

        cboTenSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cboTenSP.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboTenSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTenSPActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Size:");

        cboSize.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cboSize.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nhỏ", "Vừa", "Lớn" }));
        cboSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboSizeActionPerformed(evt);
            }
        });

        btnCheck.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCheck.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Com/icon/timkiem24.png"))); // NOI18N
        btnCheck.setText("Check");
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        lblCheck.setText("Vui lòng kiểm tra SP");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Đơn giá:");

        lblDonGia.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDonGia.setText("0");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("VND");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Số lượng:");

        spnSoLuong.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        spnSoLuong.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));

        btnGioHang.setBackground(new java.awt.Color(102, 102, 255));
        btnGioHang.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnGioHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Com/icon/themvaogiohang32.png"))); // NOI18N
        btnGioHang.setText("Thêm vào giỏ hàng");
        btnGioHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGioHangActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(102, 102, 255));
        btnXoa.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Com/iicon/xoa24.png"))); // NOI18N
        btnXoa.setText("Xóa Sản Phẩm");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("Mã SP:");

        lblMaSP.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblMaSP.setText("0");

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel4.setText("Khách Hàng:");

        txtKH.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtKH.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtKHCaretUpdate(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 51, 51));
        jLabel18.setText("Tên Thành Viên:");

        lblTenTV.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblTenTV.setForeground(new java.awt.Color(255, 51, 51));
        lblTenTV.setText(".........");

        jLabel19.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 51, 51));
        jLabel19.setText("Loại Thẻ:");

        lblLoaiThe.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblLoaiThe.setForeground(new java.awt.Color(255, 51, 51));
        lblLoaiThe.setText(".........");

        btlTimKiemTV.setText("Tìm kiếm");
        btlTimKiemTV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btlTimKiemTVActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 51, 51));
        jLabel20.setText("Giảm:");

        lblGiam.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        lblGiam.setForeground(new java.awt.Color(255, 51, 51));
        lblGiam.setText(".........");

        javax.swing.GroupLayout panlThanhVIenLayout = new javax.swing.GroupLayout(panlThanhVIen);
        panlThanhVIen.setLayout(panlThanhVIenLayout);
        panlThanhVIenLayout.setHorizontalGroup(
            panlThanhVIenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panlThanhVIenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panlThanhVIenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panlThanhVIenLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btlTimKiemTV))
                    .addGroup(panlThanhVIenLayout.createSequentialGroup()
                        .addGroup(panlThanhVIenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panlThanhVIenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblGiam)
                            .addComponent(lblTenTV, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLoaiThe, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panlThanhVIenLayout.setVerticalGroup(
            panlThanhVIenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panlThanhVIenLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(panlThanhVIenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(lblTenTV))
                .addGap(18, 18, 18)
                .addGroup(panlThanhVIenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(lblLoaiThe))
                .addGap(18, 18, 18)
                .addGroup(panlThanhVIenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(lblGiam))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(btlTimKiemTV)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel10)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboSize, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCheck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spnSoLuong))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(lblCheck))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblMaSP))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(btnGioHang)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblDonGia)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12))
                    .addComponent(cboLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(panlThanhVIen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(txtKH, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cboLoaiSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cboSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCheck)
                            .addComponent(lblCheck))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(lblDonGia)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11)
                            .addComponent(lblMaSP)))
                    .addComponent(panlThanhVIen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(spnSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGioHang)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(61, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        tblBanHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên SP", "Loại SP", "Size", "Số lượng", "Đơn giá (VNĐ)", "Thành tiền (VNĐ)"
            }
        ));
        jScrollPane1.setViewportView(tblBanHang);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 987, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(0, 153, 153));

        jLabel9.setFont(new java.awt.Font("sansserif", 1, 28)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 255, 0));
        jLabel9.setText("Thanh Toán");

        jLabel14.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Tổng Cộng:");

        txtTongCong.setBackground(new java.awt.Color(204, 204, 204));
        txtTongCong.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        txtTongCong.setForeground(new java.awt.Color(255, 51, 51));

        jLabel15.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Thành Tiền:");

        txtThanhTien.setBackground(new java.awt.Color(204, 204, 204));
        txtThanhTien.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        txtThanhTien.setForeground(new java.awt.Color(255, 51, 51));
        txtThanhTien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtThanhTienActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Tiền đưa:");

        txtTienKhachDua.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        txtTienKhachDua.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtTienKhachDuaCaretUpdate(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Tiền Trả:");

        txtTienTra.setBackground(new java.awt.Color(204, 204, 204));
        txtTienTra.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        txtTienTra.setForeground(new java.awt.Color(255, 51, 51));

        lblthongtin.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        lblthongtin.setForeground(new java.awt.Color(204, 255, 0));
        lblthongtin.setText("...");

        btnXuatHoaDon.setBackground(new java.awt.Color(0, 255, 102));
        btnXuatHoaDon.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        btnXuatHoaDon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Com/iicon/print64.png"))); // NOI18N
        btnXuatHoaDon.setText("Xuất Hóa Đơn");
        btnXuatHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatHoaDonActionPerformed(evt);
            }
        });

        btnTinh.setBackground(new java.awt.Color(255, 204, 204));
        btnTinh.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N
        btnTinh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Com/iicon/calculator32.png"))); // NOI18N
        btnTinh.setText("  Tính");
        btnTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTinhActionPerformed(evt);
            }
        });

        txtMDH.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        txtMDH.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                txtMDHCaretUpdate(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Mã hóa đơn:");

        jLabel22.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Khuyến mãi:");

        jLabel23.setBackground(new java.awt.Color(255, 255, 255));
        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setText("HDxxxx");

        lblKhuyenMai.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        lblKhuyenMai.setForeground(new java.awt.Color(204, 255, 0));
        lblKhuyenMai.setText("0");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGap(157, 157, 157)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblthongtin, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtTienTra, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnTinh, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                            .addGap(35, 35, 35)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel14)
                                .addComponent(jLabel17)
                                .addComponent(jLabel22)
                                .addComponent(jLabel15)
                                .addComponent(jLabel16))
                            .addGap(37, 37, 37)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtTongCong, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                                .addComponent(txtThanhTien, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtTienKhachDua)
                                .addComponent(lblKhuyenMai, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addComponent(jLabel21)
                            .addGap(18, 18, 18)
                            .addComponent(txtMDH, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel23))
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(124, 124, 124))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(btnXuatHoaDon)
                        .addGap(99, 99, 99))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtTongCong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(lblKhuyenMai))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtThanhTien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtTienKhachDua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(btnTinh)
                .addGap(26, 26, 26)
                .addComponent(lblthongtin)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTienTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txtMDH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnXuatHoaDon)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cboLoaiSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboLoaiSPActionPerformed
        this.fillComboBoxTenSP();
    }//GEN-LAST:event_cboLoaiSPActionPerformed

    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        this.checkSP();
    }//GEN-LAST:event_btnCheckActionPerformed

    private void btnGioHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGioHangActionPerformed
        // TODO add your handling code here:
        this.themVaoGioHang();
        this.Tongtien();
    }//GEN-LAST:event_btnGioHangActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        this.xoaMotHangTrenTable();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void cboTenSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTenSPActionPerformed
        this.disableAdd();
    }//GEN-LAST:event_cboTenSPActionPerformed

    private void cboSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboSizeActionPerformed
        this.disableAdd();
    }//GEN-LAST:event_cboSizeActionPerformed

    private void btnXuatHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatHoaDonActionPerformed
        // TODO add your handling code here:
        if (checkHD() == true) {
            this.xuathoadon();
            this.insert1();
            this.insert2();
            txtKH.setText("");
            lblDonGia.setText("");
            lblMaSP.setText("");
            lblCheck.setText("Vui lòng kiểm tra SP");
            this.clearTable();
        }
    }//GEN-LAST:event_btnXuatHoaDonActionPerformed

    private void btnTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTinhActionPerformed
        // TODO add your handling code here:
        if (checkTien() == true) {
            this.khachDua();
            this.text();
        }
    }//GEN-LAST:event_btnTinhActionPerformed

    private void btlTimKiemTVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlTimKiemTVActionPerformed
        // TODO add your handling code here:
        if (batMaKH() == true) {
            this.maKH();
        }
    }//GEN-LAST:event_btlTimKiemTVActionPerformed

    private void txtKHCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtKHCaretUpdate
        // TODO add your handling code here:
        panlThanhVIen.setVisible(true);
        if (txtKH.getText().equalsIgnoreCase("")) {
            panlThanhVIen.setVisible(false);
            lblTenTV.setText("");
            lblLoaiThe.setText("");
            lblGiam.setText("");
            txtThanhTien.setText(txtTongCong.getText());
            lblKhuyenMai.setText("0");
        }
    }//GEN-LAST:event_txtKHCaretUpdate

    private void txtThanhTienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtThanhTienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtThanhTienActionPerformed

    private void txtMDHCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtMDHCaretUpdate
        // TODO add your handling code here:
        this.checkHDD();
    }//GEN-LAST:event_txtMDHCaretUpdate

    private void txtTienKhachDuaCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_txtTienKhachDuaCaretUpdate
        // TODO add your handling code here:
        if (txtTienKhachDua.getText().trim().length() == 0) {
            lblthongtin.setText("...");
        }
        if (txtTienKhachDua.getText().trim().length() == 0) {
            txtMDH.setEditable(false);
        }
        if (txtTienKhachDua.getText().trim().length() == 0) {
            txtTienTra.setText("0");
        }
        if (txtTienKhachDua.getText().trim().length() == 0) {
            txtMDH.setText("");
        }
    }//GEN-LAST:event_txtTienKhachDuaCaretUpdate

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BanHangJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BanHangJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BanHangJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BanHangJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                BanHangJDialog dialog = new BanHangJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btlTimKiemTV;
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnGioHang;
    private javax.swing.JButton btnTinh;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXuatHoaDon;
    private javax.swing.JComboBox cboLoaiSP;
    private javax.swing.JComboBox cboSize;
    private javax.swing.JComboBox cboTenSP;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblCheck;
    private javax.swing.JLabel lblDATE;
    private javax.swing.JLabel lblDonGia;
    private javax.swing.JLabel lblDongHo;
    private javax.swing.JLabel lblGiam;
    private javax.swing.JLabel lblKhuyenMai;
    private javax.swing.JLabel lblLoaiThe;
    private javax.swing.JLabel lblLoiChao;
    private javax.swing.JLabel lblMaNV;
    private javax.swing.JLabel lblMaSP;
    private javax.swing.JLabel lblTenNV;
    private javax.swing.JLabel lblTenTV;
    private javax.swing.JLabel lblthongtin;
    private javax.swing.JPanel panlThanhVIen;
    private javax.swing.JSpinner spnSoLuong;
    private javax.swing.JTable tblBanHang;
    private javax.swing.JTextField txtKH;
    private javax.swing.JTextField txtMDH;
    private javax.swing.JTextField txtThanhTien;
    private javax.swing.JTextField txtTienKhachDua;
    private javax.swing.JTextField txtTienTra;
    private javax.swing.JTextField txtTongCong;
    // End of variables declaration//GEN-END:variables

    SanPhamDAO dao1 = new SanPhamDAO();
    LoaiSPDAO dao2 = new LoaiSPDAO();
    int ttLoiChao = 0;
    NumberFormat formatter = new DecimalFormat("#.###");
    ArrayList<BanHang> ds = new ArrayList<>();
    DefaultTableModel model;

    private void init() {
        this.setTitle("IT COFFEE - BÁN HÀNG");
        this.setLocationRelativeTo(null);
        this.text();
        this.checkHDD();

        this.startDongHo();
        lblLoiChao.setText("Last Christmas");
        this.startLoiChao();

        txtTienTra.setEditable(false);
        txtTongCong.setEditable(false);
        txtThanhTien.setEditable(false);
        txtTienTra.setText("0");
        tblBanHang.setDefaultEditor(Object.class, null);
        lblthongtin.setText("...");

        if (!Auth.isLogin()) {
            lblTenNV.setText("Dang");
            lblMaNV.setText("Dang");
        } else {
            lblTenNV.setText(Auth.user.getHoTen());
            lblMaNV.setText(Auth.user.getMaNV());
        }

        model = new DefaultTableModel();
        model.addColumn("Mã SP");
        model.addColumn("Tên SP");
        model.addColumn("Loại SP");
        model.addColumn("Size");
        model.addColumn("Số Lượng");
        model.addColumn("Đơn Giá (VNĐ)");
        model.addColumn("Tổng Tiền (VNĐ)");
        tblBanHang.setModel(model);

        this.columnWidth();
        this.fillComboBoxLoaiSP();
        this.updateStatus();

        Date t = new Date();
        SimpleDateFormat b = new SimpleDateFormat("dd-MM-YYYY");
        lblDATE.setText(b.format(t));

        if (txtKH.getText().equalsIgnoreCase("")) {
            panlThanhVIen.setVisible(false);
        }
    }

    void startDongHo() {
        new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String timeStamp = new SimpleDateFormat("HH:mm:ss").format(Calendar.getInstance().getTime());
                lblDongHo.setText(timeStamp);
            }
        }).start();
    }

    void startLoiChao() {
        new Timer(2500, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                loiChao();
            }
        }).start();
    }

    void loiChao() {
        switch (ttLoiChao) {
            case 0:
                lblLoiChao.setText("Last Christmas");
                break;
            case 1:
                lblLoiChao.setText("I gave you my heart");
                break;
            case 2:
                lblLoiChao.setText("But the very next day");
                break;
            case 3:
                lblLoiChao.setText("You gave it away");
                break;
            case 4:
                lblLoiChao.setText("This year");
                break;
            case 5:
                lblLoiChao.setText("To save me from tears");
                break;
            default:
                lblLoiChao.setText("I'll give it to someone special");
                break;
        }
        if (ttLoiChao != 6) {
            ttLoiChao++;
        } else {
            ttLoiChao = 0;
        }
    }

    void columnWidth() {
        tblBanHang.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        tblBanHang.getColumnModel().getColumn(0).setPreferredWidth(80);
        tblBanHang.getColumnModel().getColumn(1).setPreferredWidth(180);
        tblBanHang.getColumnModel().getColumn(2).setPreferredWidth(180);
        tblBanHang.getColumnModel().getColumn(3).setPreferredWidth(80);
        tblBanHang.getColumnModel().getColumn(4).setPreferredWidth(80);
        tblBanHang.getColumnModel().getColumn(5).setPreferredWidth(80);
        tblBanHang.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
    }

    void fillComboBoxLoaiSP() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboLoaiSP.getModel();
        model.removeAllElements();
        List<LoaiSP> list = dao2.selectAll();
        for (LoaiSP lsp : list) {
            model.addElement(lsp);
        }
        this.fillComboBoxTenSP();
    }

    void fillComboBoxTenSP() {
        this.disableAdd();
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboTenSP.getModel();
        model.removeAllElements();
        LoaiSP lsp = (LoaiSP) cboLoaiSP.getSelectedItem();
        if (lsp != null) {
            List<String> list = dao1.selectByLoaiSPKhongTrungTen(lsp.getMaLoaiSP());
            for (String sp : list) {
                model.addElement(sp);
            }
        }
    }

    void checkSP() {
        String tenSP = cboTenSP.getSelectedItem().toString();
        String size = cboSize.getSelectedItem().toString();
        List<String> list = dao1.selectByTenVaGia(tenSP, size);
        if (!list.isEmpty()) {
            String maSP = list.get(0);
            lblMaSP.setText(maSP);
            double donGia = Double.parseDouble(list.get(1));
            lblDonGia.setText(formatter.format(donGia));
            //Check cho phép thêm giỏ hàng
            lblCheck.setText("OK");
            this.updateStatus();
        } else {
            MsgBox.alert(this, "Không tìm thấy sản phẩm!");
        }
    }

    void themVaoGioHang() {
        for (int i = 0; i < ds.size(); i++) {
            if (tblBanHang.getValueAt(i, 0).equals(lblMaSP.getText())) {
                int quantityOld = (int) tblBanHang.getValueAt(i, 4);
                int quantityNew = (int) spnSoLuong.getValue();
                int quantityTotal = quantityOld + quantityNew;
                spnSoLuong.setValue(quantityTotal);
                ds.remove(i);
            }
        }
        this.fillListBanHang();
        this.clearForm();
    }

    void fillListBanHang() {
        String maSP = lblMaSP.getText();
        String tenSP = cboTenSP.getSelectedItem().toString();
        String loaiSP = cboLoaiSP.getSelectedItem().toString();
        String size = cboSize.getSelectedItem().toString();
        int soLuong = (int) spnSoLuong.getValue();
        double donGia = Double.parseDouble(lblDonGia.getText().replaceAll(",", ""));
        double thanhtien = donGia * soLuong;
        double tongTien = thanhtien;
        BanHang bh = new BanHang(maSP, tenSP, loaiSP, size, soLuong, donGia, tongTien);
        ds.add(bh);
        fillTableBanHang();
    }

    void Tongtien() {
        double gia, tongTien = 0;
        int count = tblBanHang.getRowCount();
        for (int i = 0; i < count; i++) {
            gia = Double.parseDouble((String) tblBanHang.getValueAt(i, 6));
            tongTien += gia;
        }
        txtTongCong.setText(formatter.format(tongTien));
        txtThanhTien.setText(formatter.format(tongTien));
    }

    void fillTableBanHang() {
        model.setRowCount(0);
        for (int i = 0; i < ds.size(); i++) {
            Vector v = new Vector();
            v.add(ds.get(i).getMaSP());
            v.add(ds.get(i).getTenSP());
            v.add(ds.get(i).getLoaiSP());
            v.add(ds.get(i).getSize());
            v.add(ds.get(i).getSoLuong());
            v.add(formatter.format(ds.get(i).getDonGia()));
            v.add(formatter.format(ds.get(i).getTongTien()));
            model.addRow(v);
        }
    }

    void xoaMotHangTrenTable() {
        // xóa dòng đang được chọn
        DefaultTableModel model = (DefaultTableModel) tblBanHang.getModel();
        if (tblBanHang.getSelectedRowCount() == 1) {
            int i = tblBanHang.getSelectedRow();
            ds.remove(i);
            this.fillTableBanHang();
            this.Tongtien();
        } else {
            if (tblBanHang.getRowCount() == 0) {
                MsgBox.alert(this, "HĐ đang trống");
            } else {
                MsgBox.alert(this, "Chọn HĐ ");
            }
        }
    }

    void clearForm() {
        spnSoLuong.setValue(1);
    }

    void disableAdd() {
        lblCheck.setText("Vui lòng kiểm tra SP");
        this.updateStatus();
        lblDonGia.setText("0");
        lblMaSP.setText("0");
    }

    void updateStatus() {
        boolean check = lblCheck.getText().equalsIgnoreCase("OK");
        btnGioHang.setEnabled(check);
    }

    void text() {
        if (Check() == false) {
            txtMDH.setEditable(false);
        } else {
            txtMDH.setEditable(true);
        }
    }

    boolean checkTien() {
        if (txtTongCong.getText().equalsIgnoreCase("")) {
            txtTongCong.requestFocus();
            MsgBox.alert(this, "Chưa có đơn hàng!");
            return false;
        }
        if (txtThanhTien.getText().equalsIgnoreCase("")) {
            txtThanhTien.requestFocus();
            MsgBox.alert(this, "Chưa có đơn hàng!");
            return false;
        }
        if (txtTienKhachDua.getText().equalsIgnoreCase("")) {
            txtTienKhachDua.requestFocus();
            MsgBox.alert(this, "Mời bạn nhập vào tiền khách đưa!");
            return false;
        }
        try {
            Double tienkhachdua = Double.parseDouble(txtTienKhachDua.getText());
        } catch (Exception e) {
            txtTienKhachDua.requestFocus();
            MsgBox.alert(this, "tiền phải là số!");
            return false;
        }
        return true;
    }

    boolean batMaKH() {
        if (txtThanhTien.getText().equalsIgnoreCase("")) {
            MsgBox.alert(this, "Mời bạn chọn sản phẩm cần bán!");
            return false;
        }
        return true;
    }

    void checkHDD() {
        if (checkHD2() == false) {
            btnXuatHoaDon.setEnabled(false);
        } else {
            btnXuatHoaDon.setEnabled(true);
        }
    }

    boolean checkHD2() {
        if (txtMDH.getText().trim().equals("")) {
            return false;
        }
        if (txtTienKhachDua.getText().trim().equals("")) {
            return false;
        }
        return true;
    }

    boolean checkHD() {
        if (txtMDH.getText().trim().equals("")) {
            MsgBox.alert(null, "Mã hóa đơn không được để trống.");
            txtMDH.grabFocus();
            return false;
        }
        if (!txtMDH.getText().trim().matches("HD[0-9]{4}")) {
            MsgBox.alert(null, "Mã hóa đơn có dạng HDxxxx, trong đó xxxx là số nguyên.");
            txtMDH.grabFocus();
            return false;
        }
        String mahd = txtMDH.getText();
        if (dao.selectById(mahd) != null) {
            MsgBox.alert(this, "Đơn hàng này đã tồn tại!");
            return false;
        }
        return true;
    }

    void maKH() {
        String username = txtKH.getText();
        double tongTien = Double.parseDouble(txtTongCong.getText());
        double thanhtien = tongTien;
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=IT_Coffee";
            Connection con = DriverManager.getConnection(url, "sa", "123");
            PreparedStatement ps = con.prepareStatement("select TenThanhVien, LoaiThe from ThanhVien where MaThanhVien = '" + username + "'");
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                String tentv = rs.getString(1);
                lblTenTV.setText(tentv);
                String loaithe = rs.getString(2);
                lblLoaiThe.setText(loaithe);
                if (loaithe.equalsIgnoreCase("Thường")) {
                    lblGiam.setText("5%");
                    lblKhuyenMai.setText("5%");
                    thanhtien = tongTien * 0.95;
                } else if (loaithe.equalsIgnoreCase("Vip")) {
                    lblGiam.setText("10%");
                    lblKhuyenMai.setText("10%");
                    thanhtien = tongTien * 0.9;
                }
                txtThanhTien.setText(formatter.format(thanhtien));
            } else {
                MsgBox.alert(this, "Khách hàng này không tồn tại!");
                con.close();
                rs.close();
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    void xuathoadon() {
        int line = tblBanHang.getRowCount();
        try {
            Writer bw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream("help//" + "Hóa Đơn IT_Coffee" + ".txt"), "UTF-8"));
            bw.write("\t\t\tIT_Coffee\r\n\r\n");
            bw.write("\t\tCông viên Phần Mền Quang Trung, Q.12, TPHCM\r\n");
            bw.write("\t\t\tSĐT: 0123456789\r\n\r\n");
            bw.write("\t\t\tHÓA ĐƠN BÁN HÀNG\r\n\r\n");
            bw.write("Mã hóa đơn: " + "HĐ1" + "\r\n");
            bw.write("NHÂN VIÊN: " + "Dang" + "\r\n");
            bw.write("----------------------------------------------------------------\r\n");
            bw.write("Mã\t\tLoại SP \tKích thước\tSố lượng\tĐơn Giá\r\n");
            bw.write("----------------------------------------------------------------\r\n");
            //Ghi sản phẩm
//            int quantotal = 0;
            for (int i = 0; i < line; i++) {
                String ma = (String) tblBanHang.getValueAt(i, 0);
                String ten = (String) tblBanHang.getValueAt(i, 1);
                String loai = (String) tblBanHang.getValueAt(i, 2);
                String size = String.valueOf(tblBanHang.getValueAt(i, 3));
                String soluong = String.valueOf(tblBanHang.getValueAt(i, 4));
                String dongia = String.valueOf(tblBanHang.getValueAt(i, 5));
                bw.write((i + 1) + ". " + ten + "\r\n");
                bw.write(ma + "\t" + loai + "\t\t" + size + "\t\t" + soluong + "\t" + dongia + "\r\n\r\n");
            }
            bw.write("-----------------------------------------------------------------------\r\n");
            bw.write("Tổng cộng:\t\t" + "" + "\t\t\t" + txtTongCong.getText() + " VNĐ\r\n");
            bw.write("\t\t--------------------------------------------\r\n");
            bw.write("\t\tThành tiền:\t\t\t" + txtThanhTien.getText() + " VNĐ\r\n");
            bw.write("\t\t--------------------------------------------\r\n");
            bw.write("\t\tTiền khách đưa:\t\t\t" + txtTienKhachDua.getText() + " VNĐ\r\n");
            bw.write("\t\tTiền trả lại:\t\t\t" + txtTienTra.getText() + " VNĐ\r\n");
            bw.write("------------------------------------------------------------\r\n");
            bw.write("------------------------------------------------------------\r\n");
            bw.write("Mật khẩu Wifi: ITCoffee\r\n");
            bw.write("---------------------CÁM ƠN QUÝ KHÁCH!----------------------");
            bw.close();
        } catch (Exception e) {
            System.out.println(e);
        }
        Runtime run = Runtime.getRuntime();
        try {
            run.exec("notepad History//" + "Hóa Đơn IT_Coffee" + ".txt");
        } catch (IOException e) {

        }
    }

    void khachDua() {
        double thanhtien = Double.parseDouble(txtThanhTien.getText());
        double tienkhachdua = Double.parseDouble(txtTienKhachDua.getText());
        if (tienkhachdua < thanhtien) {
            lblthongtin.setText("Khách đưa thiếu");
        } else if (tienkhachdua > thanhtien) {
            lblthongtin.setText("Khách đưa dư");
            double tientra = tienkhachdua - thanhtien;
            txtTienTra.setText(formatter.format(tientra));
        } else if (tienkhachdua == thanhtien) {
            txtTienTra.setText("0");
            lblthongtin.setText("...");
        }
    }

    BHChiTietHDDAO dao = new BHChiTietHDDAO();

    void insert2() {
        for (int i = 0; i < tblBanHang.getRowCount(); i++) {
            BHChiTietHD hd = new BHChiTietHD();
            hd.setMaHD(txtMDH.getText());
            hd.setMaSP((String) tblBanHang.getValueAt(i, 0));
            hd.setTenSP((String) tblBanHang.getValueAt(i, 1));
            Integer soLuong = (Integer) tblBanHang.getValueAt(i, 4);
            Double tongTien = Double.parseDouble(tblBanHang.getValueAt(i, 6).toString());
            hd.setSoLuong(soLuong);
            hd.setTongTien(tongTien);
            dao.insert(hd);
        }
    }
    HoaDonDAO hddao = new HoaDonDAO();

    void insert1() {
        HoaDon hd = new HoaDon();
        hd.setMaHD(txtMDH.getText());
        hd.setMaNV(lblMaNV.getText());
        Date date = new Date();
        hd.setNgayThem(XDate.toDate(XDate.toString(date, "yyyy/MM/dd"), "yyyy/MM/dd"));
        hd.setGio(lblDongHo.getText());
        hddao.insert(hd);
    }

    void clearTable() {
        txtTongCong.setText("");
        lblKhuyenMai.setText("0");
        txtThanhTien.setText("");
        txtTienKhachDua.setText("");
        txtTienTra.setText("");

        ds.removeAll(ds);
        this.fillTableBanHang();
        this.checkHDD();
    }

    boolean Check() {
        if (txtTongCong.getText().equalsIgnoreCase("")) {
            txtTongCong.requestFocus();
            return false;
        }
        if (txtThanhTien.getText().equalsIgnoreCase("")) {
            txtThanhTien.requestFocus();
            return false;
        }
        if (txtTienKhachDua.getText().equalsIgnoreCase("")) {
            txtTienKhachDua.requestFocus();
            return false;
        }
        try {
            Double.parseDouble(txtTienKhachDua.getText());
        } catch (Exception e) {
            txtTienKhachDua.requestFocus();
            return false;
        }
        if (lblthongtin.getText().equalsIgnoreCase("khách đưa thiếu")) {
            return false;
        }
        return true;
    }

}
