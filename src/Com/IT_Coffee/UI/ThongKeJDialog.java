/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Com.IT_Coffee.UI;

import Com.IT_Coffee.DAO.ThongKeDAO;
import Com.IT_Coffee.Entity.LoaiSP;
import Com.IT_Coffee.Entity.SanPham;
import Com.IT_Coffee.utils.Auth;
import Com.IT_Coffee.utils.MsgBox;
import Com.IT_Coffee.utils.XDate;
import Com.IT_Coffee.utils.XImage;
import java.awt.Color;
import java.io.File;
import java.io.FileOutputStream;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.BorderStyle;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author HMD
 */
public class ThongKeJDialog extends javax.swing.JDialog {

    /**
     * Creates new form QuanLyJDialog
     */
    public ThongKeJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
//        this.selectTab(index);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField10 = new javax.swing.JTextField();
        buttonGroup1 = new javax.swing.ButtonGroup();
        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTopSP = new javax.swing.JTable();
        btnXuatBC1 = new javax.swing.JButton();
        rdoNgayHomNay = new javax.swing.JRadioButton();
        rdo1Thang = new javax.swing.JRadioButton();
        rdo3Thang = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblDoanhThu = new javax.swing.JTable();
        btnXuatBC2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lblTongDoanhThu = new javax.swing.JLabel();
        lblTongDoanhThu1 = new javax.swing.JLabel();
        chkTheoNgay = new javax.swing.JCheckBox();
        txtNgayThem = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();

        jTextField10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        tblTopSP.setAutoCreateRowSorter(true);
        tblTopSP.setBackground(new java.awt.Color(67, 221, 236));
        tblTopSP.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblTopSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "MÃ SP", "TÊN SP", "ĐÃ BÁN"
            }
        ));
        jScrollPane2.setViewportView(tblTopSP);

        btnXuatBC1.setBackground(new java.awt.Color(0, 255, 102));
        btnXuatBC1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnXuatBC1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Com/iicon/excel24.png"))); // NOI18N
        btnXuatBC1.setText("Xuất báo cáo");
        btnXuatBC1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatBC1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdoNgayHomNay);
        rdoNgayHomNay.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdoNgayHomNay.setSelected(true);
        rdoNgayHomNay.setText("Ngày hôm nay");
        rdoNgayHomNay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdoNgayHomNayActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdo1Thang);
        rdo1Thang.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdo1Thang.setText("1 tháng vừa qua");
        rdo1Thang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdo1ThangActionPerformed(evt);
            }
        });

        buttonGroup1.add(rdo3Thang);
        rdo3Thang.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rdo3Thang.setText("3 tháng vừa qua");
        rdo3Thang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdo3ThangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnXuatBC1)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(rdoNgayHomNay)
                .addGap(18, 18, 18)
                .addComponent(rdo1Thang)
                .addGap(18, 18, 18)
                .addComponent(rdo3Thang)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdoNgayHomNay)
                    .addComponent(rdo1Thang)
                    .addComponent(rdo3Thang))
                .addGap(79, 79, 79)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnXuatBC1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabs.addTab("TOP SẢN PHẨM", jPanel1);

        jPanel4.setBackground(new java.awt.Color(255, 204, 204));

        tblDoanhThu.setBackground(new java.awt.Color(67, 221, 236));
        tblDoanhThu.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tblDoanhThu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "NGÀY", "DOANH THU"
            }
        ));
        jScrollPane4.setViewportView(tblDoanhThu);

        btnXuatBC2.setBackground(new java.awt.Color(0, 255, 102));
        btnXuatBC2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnXuatBC2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Com/iicon/excel24.png"))); // NOI18N
        btnXuatBC2.setText("Xuất báo cáo");
        btnXuatBC2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXuatBC2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Tổng doanh thu:");

        lblTongDoanhThu.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTongDoanhThu.setForeground(new java.awt.Color(153, 0, 51));
        lblTongDoanhThu.setText("jLabel2");

        lblTongDoanhThu1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTongDoanhThu1.setForeground(new java.awt.Color(153, 0, 51));
        lblTongDoanhThu1.setText("VNĐ");

        chkTheoNgay.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        chkTheoNgay.setText("Theo ngày:");
        chkTheoNgay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTheoNgayActionPerformed(evt);
            }
        });

        txtNgayThem.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtNgayThemPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 560, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(chkTheoNgay)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNgayThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(lblTongDoanhThu)
                        .addGap(18, 18, 18)
                        .addComponent(lblTongDoanhThu1)))
                .addGap(207, 207, 207))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnXuatBC2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtNgayThem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chkTheoNgay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblTongDoanhThu)
                    .addComponent(lblTongDoanhThu1))
                .addGap(33, 33, 33)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnXuatBC2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        tabs.addTab("DOANH THU", jPanel4);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 204));
        jLabel4.setText("TỔNG HỢP THỐNG KÊ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 520, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rdo3ThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdo3ThangActionPerformed
        this.fillTableTopSP();
    }//GEN-LAST:event_rdo3ThangActionPerformed

    private void rdo1ThangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdo1ThangActionPerformed
        this.fillTableTopSP();
    }//GEN-LAST:event_rdo1ThangActionPerformed

    private void rdoNgayHomNayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdoNgayHomNayActionPerformed
        this.fillTableTopSP();
    }//GEN-LAST:event_rdoNgayHomNayActionPerformed

    private void btnXuatBC1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatBC1ActionPerformed
        this.xuatFile1();
    }//GEN-LAST:event_btnXuatBC1ActionPerformed

    private void btnXuatBC2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXuatBC2ActionPerformed
        this.xuatFile2();
    }//GEN-LAST:event_btnXuatBC2ActionPerformed

    private void chkTheoNgayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTheoNgayActionPerformed
        this.fillTableDoanhThu();
        if (chkTheoNgay.isSelected()) {
            btnXuatBC2.setEnabled(false);
        } else {
            btnXuatBC2.setEnabled(true);
        }
    }//GEN-LAST:event_chkTheoNgayActionPerformed

    private void txtNgayThemPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtNgayThemPropertyChange
        this.fillTableDoanhThu();
    }//GEN-LAST:event_txtNgayThemPropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThongKeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThongKeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThongKeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThongKeJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                int index = 0;
                ThongKeJDialog dialog = new ThongKeJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnXuatBC1;
    private javax.swing.JButton btnXuatBC2;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkTheoNgay;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JLabel lblTongDoanhThu;
    private javax.swing.JLabel lblTongDoanhThu1;
    private javax.swing.JRadioButton rdo1Thang;
    private javax.swing.JRadioButton rdo3Thang;
    private javax.swing.JRadioButton rdoNgayHomNay;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblDoanhThu;
    private javax.swing.JTable tblTopSP;
    private com.toedter.calendar.JDateChooser txtNgayThem;
    // End of variables declaration//GEN-END:variables

    ThongKeDAO daotk = new ThongKeDAO();
    NumberFormat formatter = new DecimalFormat("#,###");
    SimpleDateFormat ft = new SimpleDateFormat("dd/MM/YYYY");

    private void init() {
        this.setIconImage(XImage.getAppIcon());
        this.setTitle("TỔNG HỢP THỐNG KÊ");
        this.setLocationRelativeTo(null);
        Color col = new Color(255, 168, 168);
        this.getContentPane().setBackground(col);

        this.fillTableTopSP();
        this.fillTableDoanhThu();

        if (!Auth.isManager()) {
            tabs.remove(1);
        }
        tblDoanhThu.setDefaultEditor(Object.class, null);
        tblTopSP.setDefaultEditor(Object.class, null);
    }

    void fillTableTopSP() {
        DefaultTableModel model = (DefaultTableModel) tblTopSP.getModel();
        model.setRowCount(0);
        if (rdoNgayHomNay.isSelected()) {
            String sdf = "yyyy/MM/dd";
            Date date = new Date();
            Date dateBegin = XDate.toDate(XDate.toString(date, sdf), sdf);
            Date dateEnd = XDate.toDate(XDate.toString(date, sdf), sdf);
            List<Object[]> list = daotk.getTopSPTheoNgay(dateBegin, dateEnd);
            for (Object[] row : list) {
                model.addRow(row);
            }
        } else if (rdo1Thang.isSelected()) {
//            Date date = new Date();
//            LocalDate localDate = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
//            int month = localDate.getMonthValue();
//            int year = localDate.getYear();
//            List<Object[]> list = daotk.getTopSPTheoThang(month, year);
//            for (Object[] row : list) {
//                model.addRow(row);
//            }
            Calendar calendar = Calendar.getInstance();
// Subtract 3 months from current date
            calendar.add(Calendar.MONTH, -1);
            String sdf = "yyyy/MM/dd";
            Date dateBegin = XDate.toDate(XDate.toString(calendar.getTime(), sdf), sdf);
            Date date = new Date();
            Date dateEnd = XDate.toDate(XDate.toString(date, sdf), sdf);
            List<Object[]> list = daotk.getTopSPTheoNgay(dateBegin, dateEnd);
            for (Object[] row : list) {
                model.addRow(row);
            }
        } else if (rdo3Thang.isSelected()) {
            Calendar calendar = Calendar.getInstance();
// Subtract 3 months from current date
            calendar.add(Calendar.MONTH, -3);
            String sdf = "yyyy/MM/dd";
            Date dateBegin = XDate.toDate(XDate.toString(calendar.getTime(), sdf), sdf);
            Date date = new Date();
            Date dateEnd = XDate.toDate(XDate.toString(date, sdf), sdf);
            List<Object[]> list = daotk.getTopSPTheoNgay(dateBegin, dateEnd);
            for (Object[] row : list) {
                model.addRow(row);
            }
        }

    }

    void fillTableDoanhThu() {
        DefaultTableModel model = (DefaultTableModel) tblDoanhThu.getModel();
        model.setRowCount(0);
        if (!chkTheoNgay.isSelected()) {
            List<Object[]> list = daotk.getDoanhThu();
            for (Object[] row : list) {
                model.addRow(row);
            }
        } else {
            Date date = XDate.toDate(XDate.toString(txtNgayThem.getDate(),
                    "yyyy/MM/dd"), "yyyy/MM/dd");
            List<Object[]> list = daotk.getDoanhThu2(date);
            for (Object[] row : list) {
                model.addRow(row);
            }
        }
        double doanhThu = 0;
        for (int i = 0; i < tblDoanhThu.getRowCount(); i++) {
            double temp = (double) tblDoanhThu.getValueAt(i, 1);
            doanhThu += temp;
            tblDoanhThu.setValueAt(formatter.format(temp), i, 1);
        }
        lblTongDoanhThu.setText(formatter.format(doanhThu));
    }

    void xuatFile1() {
        JFileChooser excelExportChooser = new JFileChooser();
        excelExportChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        excelExportChooser.setDialogTitle("Save Excel File");
        //filter the file
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel Files", "*.xls", "xls", "xlsx", "xlsn");
        excelExportChooser.addChoosableFileFilter(filter);
        excelExportChooser.setFileFilter(filter);
        int excelchooser = excelExportChooser.showSaveDialog(null);
        if (excelchooser == JFileChooser.APPROVE_OPTION) {
            try {
                List<Object[]> list = null;
                String nameSheet = "";
                if (rdoNgayHomNay.isSelected()) {
                    String sdf = "yyyy/MM/dd";
                    Date date = new Date();
                    Date dateBegin = XDate.toDate(XDate.toString(date, sdf), sdf);
                    Date dateEnd = XDate.toDate(XDate.toString(date, sdf), sdf);
                    String nameSheet1 = XDate.toString(dateBegin, sdf);
                    nameSheet = nameSheet1.replaceAll("/", "-");
                    list = daotk.getTopSPTheoNgay(dateBegin, dateEnd);
                } else if (rdo1Thang.isSelected()) {
                    Calendar calendar = Calendar.getInstance();
                    calendar.add(Calendar.MONTH, -1);
                    String sdf = "yyyy/MM/dd";
                    Date dateBegin = XDate.toDate(XDate.toString(calendar.getTime(), sdf), sdf);
                    Date date = new Date();
                    Date dateEnd = XDate.toDate(XDate.toString(date, sdf), sdf);
                    String nameSheet1 = XDate.toString(dateBegin, sdf)
                            + " _ " + XDate.toString(dateEnd, sdf);
                    nameSheet = nameSheet1.replaceAll("/", "-");
                    list = daotk.getTopSPTheoNgay(dateBegin, dateEnd);
                } else if (rdo3Thang.isSelected()) {
                    Calendar calendar = Calendar.getInstance();
                    calendar.add(Calendar.MONTH, -3);
                    String sdf = "yyyy/MM/dd";
                    Date dateBegin = XDate.toDate(XDate.toString(calendar.getTime(), sdf), sdf);
                    Date date = new Date();
                    Date dateEnd = XDate.toDate(XDate.toString(date, sdf), sdf);
                    String nameSheet1 = XDate.toString(dateBegin, sdf)
                            + " _ " + XDate.toString(dateEnd, sdf);
                    nameSheet = nameSheet1.replaceAll("/", "-");
                    list = daotk.getTopSPTheoNgay(dateBegin, dateEnd);
                }

                XSSFWorkbook workbook = new XSSFWorkbook();
                XSSFSheet sheet = workbook.createSheet(nameSheet);
                XSSFRow row = null;
                Cell cell = null;

                //meger title
                sheet.addMergedRegion(new CellRangeAddress(0, 1, 0, 2));

                //create CellStyle
                CellStyle cellStyle = createStyleForHeader(sheet);
                CellStyle cellStyle2 = createStyleForTittle(sheet);

                row = sheet.createRow(0);
                cell = row.createCell(0, CellType.STRING);
                cell.setCellStyle(cellStyle2);
                cell.setCellValue("TOP SẢN PHẨM");

                //create column headings
                row = sheet.createRow(2);
                cell = row.createCell(0, CellType.STRING);
                cell.setCellStyle(cellStyle);
                cell.setCellValue(" MÃ SP      ");

                cell = row.createCell(1, CellType.STRING);
                cell.setCellStyle(cellStyle);
                cell.setCellValue(" TÊN SP                     ");

                cell = row.createCell(2, CellType.NUMERIC);
                cell.setCellStyle(cellStyle);
                cell.setCellValue(" ĐÃ BÁN     ");

                //Auto resize column width
                int numberOfColumn = sheet.getRow(2).getPhysicalNumberOfCells();
                autosizeColumn(sheet, numberOfColumn);

                if (list != null) {
                    int i = -1;
                    for (Object[] excel : list) {
                        i++;
                        row = sheet.createRow(3 + i);

                        cell = row.createCell(0);
                        cell.setCellValue((String) excel[0]);

                        cell = row.createCell(1);
                        cell.setCellValue((String) excel[1]);

                        cell = row.createCell(2);
                        cell.setCellValue((int) excel[2]);
                    }
                }

                FileOutputStream excelFIS;
                excelFIS = new FileOutputStream(excelExportChooser.getSelectedFile() + ".xlsx");
                workbook.write(excelFIS);
                workbook.close();
                MsgBox.alert(this, "Xuất file thành công!");

            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }

    void xuatFile2() {
        JFileChooser excelExportChooser = new JFileChooser();
        excelExportChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        excelExportChooser.setDialogTitle("Save Excel File");
        //filter the file
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel Files", "*.xls", "xls", "xlsx", "xlsn");
        excelExportChooser.addChoosableFileFilter(filter);
        excelExportChooser.setFileFilter(filter);
        int excelchooser = excelExportChooser.showSaveDialog(null);
        if (excelchooser == JFileChooser.APPROVE_OPTION) {
            try {
                List<Object[]> list = null;
                String nameSheet = "DOANH THU";
                list = daotk.getDoanhThu();

                XSSFWorkbook workbook = new XSSFWorkbook();
                XSSFSheet sheet = workbook.createSheet(nameSheet);
                XSSFRow row = null;
                Cell cell = null;

                //meger title
                sheet.addMergedRegion(new CellRangeAddress(0, 1, 0, 1));

                //create CellStyle
                CellStyle cellStyle = createStyleForHeader(sheet);
                CellStyle cellStyle2 = createStyleForTittle(sheet);

                row = sheet.createRow(0);
                cell = row.createCell(0, CellType.STRING);
                cell.setCellStyle(cellStyle2);
                cell.setCellValue("TỔNG: " + lblTongDoanhThu.getText());

                //create column headings
                row = sheet.createRow(2);
                cell = row.createCell(0, CellType.STRING);
                cell.setCellStyle(cellStyle);
                cell.setCellValue(" NGÀY                ");

                cell = row.createCell(1, CellType.STRING);
                cell.setCellStyle(cellStyle);
                cell.setCellValue(" DOANH THU           ");

                //Auto resize column width
                int numberOfColumn = sheet.getRow(2).getPhysicalNumberOfCells();
                autosizeColumn(sheet, numberOfColumn);

                if (list != null) {
                    int i = -1;
                    for (Object[] excel : list) {
                        i++;
                        row = sheet.createRow(3 + i);

                        cell = row.createCell(0);
                        cell.setCellValue((String) excel[0]);

                        cell = row.createCell(1);
                        cell.setCellValue((double) excel[1]);
                    }
                }

                FileOutputStream excelFIS;
                excelFIS = new FileOutputStream(excelExportChooser.getSelectedFile() + ".xlsx");
                workbook.write(excelFIS);
                workbook.close();
                MsgBox.alert(this, "Xuất file thành công!");

            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }

    void autosizeColumn(Sheet sheet, int lastColumn) {
        for (int columnIndex = 0; columnIndex < lastColumn; columnIndex++) {
            sheet.autoSizeColumn(columnIndex);
        }
    }

    private static CellStyle createStyleForHeader(Sheet sheet) {
        // Create font
        Font font = sheet.getWorkbook().createFont();
        font.setFontName("Calibri");
        font.setBold(true);
        font.setFontHeightInPoints((short) 12); // font size
        font.setColor(IndexedColors.WHITE.getIndex()); // text color

        // Create CellStyle
        CellStyle cellStyle = sheet.getWorkbook().createCellStyle();
        cellStyle.setFont(font);
        cellStyle.setFillForegroundColor(IndexedColors.GREEN.getIndex());
        cellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
        cellStyle.setBorderBottom(BorderStyle.THIN);
        return cellStyle;
    }

    private static CellStyle createStyleForTittle(Sheet sheet) {
        // Create font
        Font font = sheet.getWorkbook().createFont();
        font.setFontName("Calibri");
        font.setBold(true);
        font.setFontHeightInPoints((short) 18); // font size
        font.setColor(IndexedColors.BLACK.getIndex()); // text color

        // Create CellStyle
        CellStyle cellStyle = sheet.getWorkbook().createCellStyle();
        cellStyle.setFont(font);
        cellStyle.setAlignment(HorizontalAlignment.CENTER);
        cellStyle.setFillForegroundColor(IndexedColors.GREY_25_PERCENT.getIndex());
        cellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
        cellStyle.setBorderBottom(BorderStyle.THIN);
        return cellStyle;
    }
}
