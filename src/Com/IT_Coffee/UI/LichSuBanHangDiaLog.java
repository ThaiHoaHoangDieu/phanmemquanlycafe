/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Com.IT_Coffee.UI;

import Com.IT_Coffee.DAO.LichSuBanHangDAO;
import Com.IT_Coffee.Entity.LichSuBanHang;
import Com.IT_Coffee.utils.MsgBox;
import Com.IT_Coffee.utils.XDate;
import java.awt.Color;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dang
 */
public class LichSuBanHangDiaLog extends javax.swing.JDialog {

    /**
     * Creates new form LichSuBanHangDiaLog
     */
    public LichSuBanHangDiaLog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblLSBH = new javax.swing.JTable();
        JpanelDemo = new javax.swing.JPanel();
        txtNgayBan = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        txtMaNV = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtMaDonHang = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(null);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblLSBH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã ĐH", "Mã NV", "Mã SP", "Tên SP", "Ngày BH", "Giờ", "Số Lượng", "Tổng Tiền"
            }
        ));
        jScrollPane1.setViewportView(tblLSBH);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 292, 1030, 290));

        JpanelDemo.setBorder(null);

        txtNgayBan.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtNgayBan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNgayBanActionPerformed(evt);
            }
        });
        txtNgayBan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNgayBanKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Tìm kiếm Theo Ngày Bán");

        jLabel3.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Tìm Kiếm theo MaSP");

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Tìm kiếm theo MaNV");

        txtMaSP.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtMaSP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMaSPKeyReleased(evt);
            }
        });

        txtMaNV.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtMaNV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMaNVKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Tìm kiếm theo MADH");

        txtMaDonHang.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        txtMaDonHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaDonHangActionPerformed(evt);
            }
        });
        txtMaDonHang.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMaDonHangKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout JpanelDemoLayout = new javax.swing.GroupLayout(JpanelDemo);
        JpanelDemo.setLayout(JpanelDemoLayout);
        JpanelDemoLayout.setHorizontalGroup(
            JpanelDemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpanelDemoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JpanelDemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(JpanelDemoLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMaDonHang, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JpanelDemoLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtMaNV)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 172, Short.MAX_VALUE)
                .addGroup(JpanelDemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(JpanelDemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNgayBan, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaSP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        JpanelDemoLayout.setVerticalGroup(
            JpanelDemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JpanelDemoLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(JpanelDemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaDonHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(txtNgayBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(JpanelDemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jPanel1.add(JpanelDemo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 1020, 180));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Com/iicon/backgroupcf.jpg"))); // NOI18N
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 590));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMaDonHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaDonHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaDonHangActionPerformed

    private void txtMaDonHangKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaDonHangKeyReleased
        this.timKiemTheoMaHD();
    }//GEN-LAST:event_txtMaDonHangKeyReleased

    private void txtMaNVKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaNVKeyReleased
        // TODO add your handling code here:
        this.timKiemTheoMaNV();
    }//GEN-LAST:event_txtMaNVKeyReleased

    private void txtMaSPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaSPKeyReleased
        this.timKiemTheoMaSP();
    }//GEN-LAST:event_txtMaSPKeyReleased

    private void txtNgayBanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNgayBanActionPerformed

    }//GEN-LAST:event_txtNgayBanActionPerformed

    private void txtNgayBanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNgayBanKeyReleased
        this.timKiemTheoNgayBan();
    }//GEN-LAST:event_txtNgayBanKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LichSuBanHangDiaLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LichSuBanHangDiaLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LichSuBanHangDiaLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LichSuBanHangDiaLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LichSuBanHangDiaLog dialog = new LichSuBanHangDiaLog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JpanelDemo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblLSBH;
    private javax.swing.JTextField txtMaDonHang;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtNgayBan;
    // End of variables declaration//GEN-END:variables

    void init() {
        fillTable();
        setTitle("Lịch Sử Bán Hàng!");
        setLocationRelativeTo(null);
        JpanelDemo.setBackground(new Color(0, 0, 0, 80));
        tblLSBH.setDefaultEditor(Object.class, null);
    }
    LichSuBanHangDAO dao = new LichSuBanHangDAO();
    NumberFormat formatter = new DecimalFormat("#,###");
    SimpleDateFormat ft = new SimpleDateFormat("dd/MM/YYY");
    
    void fillTable() {
        DefaultTableModel model = (DefaultTableModel) tblLSBH.getModel();
        model.setRowCount(0);
        try {
            List<LichSuBanHang> list = dao.selectAll();
            for (LichSuBanHang BH : list) {
                Object[] row
                        = {
                            BH.getMaDH(),
                            BH.getMaNV(),
                            BH.getMaSP(),
                            BH.getTenSP(),
                            ft.format(BH.getNgayThem()),
                            BH.getGio(),
                            formatter.format(BH.getSoLuong()),
                            formatter.format(BH.getTongTien()),};
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }
    
    void timKiemTheoMaHD() {
        DefaultTableModel model = (DefaultTableModel) tblLSBH.getModel();
        model.setRowCount(0);
        try {
            String keyword = txtMaDonHang.getText();
            List<LichSuBanHang> list = dao.selectByKeywordMAHD(keyword);
            for (LichSuBanHang ls : list) {
                Object[] row
                        = {
                            ls.getMaDH(),
                            ls.getMaNV(),
                            ls.getMaSP(),
                            ls.getTenSP(),
                            ft.format(ls.getNgayThem()),
                            ls.getGio(),
                            XDate.toString(ls.getNgayThem(), "MM-dd-yyyy"),
                            ls.getTongTien(),};
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }
    
    void timKiemTheoMaNV() {
        DefaultTableModel model = (DefaultTableModel) tblLSBH.getModel();
        model.setRowCount(0);
        try {
            String keyword = txtMaNV.getText();
            List<LichSuBanHang> list = dao.selectByKeywordMANV(keyword);
            for (LichSuBanHang ls : list) {
                Object[] row
                        = {
                            ls.getMaDH(),
                            ls.getMaNV(),
                            ls.getMaSP(),
                            ls.getTenSP(),
                            ft.format(ls.getNgayThem()),
                            ls.getGio(),
                            ls.getSoLuong(),
                            ls.getTongTien(),};
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }
    
    void timKiemTheoMaSP() {
        DefaultTableModel model = (DefaultTableModel) tblLSBH.getModel();
        model.setRowCount(0);
        try {
            String keyword = txtMaSP.getText();
            List<LichSuBanHang> list = dao.selectByKeywordMASP(keyword);
            for (LichSuBanHang ls : list) {
                Object[] row
                        = {
                            ls.getMaDH(),
                            ls.getMaNV(),
                            ls.getMaSP(),
                            ls.getTenSP(),
                            ft.format(ls.getNgayThem()),
                            ls.getGio(),
                            ls.getSoLuong(),
                            ls.getTongTien(),};
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }
    
    void timKiemTheoNgayBan() {
        DefaultTableModel model = (DefaultTableModel) tblLSBH.getModel();
        model.setRowCount(0);
        try {
            String keyword = txtNgayBan.getText();
            List<LichSuBanHang> list = dao.selectByKeywordMANT(keyword);
            for (LichSuBanHang ls : list) {
                Object[] row
                        = {
                            ls.getMaDH(),
                            ls.getMaNV(),
                            ls.getMaSP(),
                            ls.getTenSP(),
                            ft.format(ls.getNgayThem()),
                            ls.getGio(),
                            ls.getSoLuong(),
                            ls.getTongTien(),};
                model.addRow(row);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }
    
}
